@model Basha.Models.RegisterViewModel
@{
    ViewBag.Title = "CreateUser";
}
<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>
@*<h2>CreateUser</h2>*@
<h3>@Html.ActionLink("User List", "UserList") </h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset class="form-horizontal">
        @*<legend>Create a new user.</legend>*@
        <div style=" background-color:aqua ">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="control-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(m => m.Email)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                <div class="controls">
                    @Html.PasswordFor(m => m.Password)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                <div class="controls">
                    @Html.PasswordFor(m => m.ConfirmPassword)
                </div>
            </div>*@



        @*<div class="control-group">
                @Html.LabelFor(m => m.HomeTown, new { @class = "control-label" })
                <div class="controls">
                    @Html.TextBoxFor(m => m.HomeTown)
                </div>
            </div>*@
        @*<h4>Select Role for User</h4>*@
        <hr />
        @*@Html.DropDownList("RoleId", "No Roles")*@
        <div class="form-actions no-color">
            <input type="submit" value="Create" class="btn btn-lg btn-success " />
        </div>
    </fieldset>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

